#!/usr/bin/env node
const{execSync:execSync}=require("child_process"),MAP_EMOJI={add:"💪",alert:"🛎",attach:"🖇",bring:"👌",cancel:"❌",change:"🧬",complete:"✅",coverage:"☂",delete:"🕊",deliver:"🤝",deploy:"✅",destroy:"❌",extend:"💪",fix:"🔧",forbid:"❗",implement:"💪",improve:"🎉",include:"💪",introduce:"💪",kill:"❌",limit:"❗",merge:"♻️",modify:"🔨",pass:"✅",prepare:"🔧",refactor:"🔨",release:"🎂",remove:"🕊",rename:"🖊",restrain:"❗",return:"💪",revert:"❌",show:"👁",test:"🥽",tweak:"🧬",update:"👌",use:"🤝"},getTicketNameFromBranch=()=>{const e=(e="")=>[...e].reverse().join(""),t=e(execSync("git branch --show-current").toString()).match(/\d+-[A-Z]+(?!-?[a-zA-Z]{1,10})/g)||[],[r]=t.map(e);return r?r+": ":""},getUserProvidedMessage=()=>{const e=process.argv.splice(2).join(" ").trim();return 0===e.length?"🔨 commit without message":e||""},getEmojiFromText=(e="")=>{const t=e.toLowerCase().split(" "),r=["","s","es","ed","d"];for(let e=0;e<t.length;e++)for(let o=0;o<r.length;o++){const c=MAP_EMOJI[t[e]+r[o]];if(c)return c+" "}return""},execCommit=()=>{const e=getUserProvidedMessage(),t=getEmojiFromText(e),r=`${getTicketNameFromBranch()}${t}${e}`.replace(/"/g,'\\"');try{return execSync(`git commit -m "${r}"`).toString()}catch(e){return e.stdout.toString()}};console.log(execCommit());